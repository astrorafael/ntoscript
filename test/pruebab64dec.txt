CkMiIC91c3Ivc2hhcmUvZG9jL1ZmeEZvcnRoL0xpYiIgU2V0TWFjcm8gTElCICAgICAgXCBW
RlggbGlicmFyeSBiYXNlIHBhdGgKQyIgLi4vZXh0ZXJuYWxzIiAgICAgICAgICAgICAgICBT
ZXRNYWNybyBFWFRFUk5BTFMKQyIgLi4vc3JjIiAgICAgICAgICAgICAgICAgICAgICBTZXRN
YWNybyBTUkMKCmluY2x1ZGUgJVNSQyUvZmlsZWxpc3QuZnMKCmFsc28gaW5kaSBkZWZpbml0
aW9ucwoKClZhcmlhYmxlIG0tdGNiClZhcmlhYmxlIG0tc2lkCkNyZWF0ZSBtLXNvY2sgL1Nv
Y2tEZXYgIGFsbG90JmVyYXNlCkNyZWF0ZSBtLXNlbSAvU2VtYXBob3JlIGFsbG90JmVyYXNl
CkNyZWF0ZSBtLWVuZHBvaW50IC9FbmRQb2ludCBhbGxvdCZlcmFzZQoKU2VydmVyOiBSZW1v
dGVTZXJ2ZXIgbG9jYWxob3N0IDc2MjQKCjogKGdldFByb3BlcnRpZXMpICAgKCB0aGlzIC0t
ICkJClwgK0cgRG8gdGhlIGFjdHVhbCBzZW5kaW5nIG9mICpcZns8Z2V0UHJvcGVydGllcyB2
ZXJzaW9uPScxLjUnfS4KICAgICAuIiA8Z2V0UHJvcGVydGllcyB2ZXJzaW9uPScxLjUnIiAg
LiIgLz4iIGNyCjsgCgo6IGNyZWF0ZS10YXNrICAgKCB0aGlzIC0tICkKXCArRyBDcmVhdGUg
dGhlIGxpc3RlbmluZyBiYWNrZ3JvdW5kIHRhc2sgZm9yIHRoaXMgc2VydmVyLgogICAgIG5l
dy10YXNrICBtLXRjYiAhCjsKCjogaW5pdC10YXNrICAgKCB0aGlzIC0tICkKXCArRyBMYXVu
Y2hlcyB0aGUgKlxmb3tMaXN0ZW5lcn0gdGFzayBhc25kIGluaXRpYWxpemUgc29tZSBzcGVj
aWZpYyAqXGZve1VTRVJ9ClwgKyogdmFyaWFibGVzIGtub3duIHRvIHRoaXMgb2JqZWN0Lgog
ICBbJ10gTGlzdGVuZXIgbS10Y2IgQCBpbml0aWF0ZSAgICAgCiAgIE5VTEwgICBtLXRjYiBA
IFNlcnZlck9iaiAgIGhpcyAhCiAgIG0tc2VtICBtLXRjYiBAIFJ4U2VtYXBob3JlIGhpcyAh
CiAgIG0tc29jayBtLXRjYiBAIFJ4U29ja2V0ICAgIGhpcyAhCiAgIG0tc29jayBtLXNpZCAh
CiAgIHBhdXNlCQkJCVwgbGV0IHRoZSBvdGhlciB0YXNrIHJ1bgo7Cgo6IG9wZW4tc29ja2V0
ICggdGhpcyAtLSApClwgK0cgQ3JlYXRlIGEgc29ja2V0IGJvdW5kIHRvIHRoaXMgKlxmb3tJ
TkRJLVNFUlZFUn0gY2xhc3MgaW5zdGFuY2UuCiAgIFJlbW90ZVNlcnZlciAtMSBTT0NLREVW
X05PTkJMT0NLIG0tc29jayBvcGVuLWdpbyB0aHJvdyBkcm9wCjsKCjogbXljb25zdHJ1Y3Qg
ICAoIHRoaXMgLS0gKQkJXCBvdmVycmlkZXMgY29uc3RydWN0ClwgKkcgQ3JlYXRlIGFuZCAq
XGZve0lOREktU0VSVkVSfSBvYmplY3QgYW5kIGFzc29jaWF0ZWQgYmFja2dyb3VuZCB0YXNr
LgpcICoqIE9iamVjdCBuYW1lIGlzIGdpdmVuIGJ5ICpcaXtjYTEgdTF9LiAgICAgClwgKiog
SG9zdC9wb3J0IGdpdmVuIGJ5IHRoZSAqXGZvey9FbmRQb2ludH0gKlxpe2FkZHJ9IHBhcmFt
ZXRlci4gCiAgICAgbS1zZW0gaW5pdFNlbQogICAgIG0tc29jayAgaW5pdFNvY2tEZXYKICAg
ICB4Y29uc29sZSBtLXNpZCAhCiAgICAgY3JlYXRlLXRhc2sgICAgICAgICAgIAo7Cgo6IGNv
bm5lY3RlZD8gICAoIHRoaXMgLS0gZmxhZyApClwgKkcgVGVsbCBjb25uZWN0aW9uIHN0YXR1
cy4gVHJ1ZSBpZiBjb25uZWN0ZWQuCiAgICAgbS10Y2IgQCBydW5uaW5nPwo7Cgo6IGNvbm5l
Y3QgICAoIGFkZHIgdGhpcyAtLSAgKQkJXCBvdmVycmlkZXMgY29ubmVjdApcICpHIE9wZW4g
YSBzb2NrZXQgdG8gaG9zdC9wb3J0IGdpdmVuIGJ5IHRoZSAqXGZvey9FbmRQb2ludH0gKlxp
e2FkZHJ9LgpcICoqIEFsc28gY3JlYXRlcyBhIGJhY2tncm91bmQgdGFzayB0byBsaXN0ZW4g
dG8gaW5jb21pbmcgZGF0YS4KICAgY29ubmVjdGVkPyBub3QgaWYKICAgICAgaW5pdC10YXNr
IG9wZW4tc29ja2V0IAogICAgICBtLXRjYiBAIHJlc3RhcnQJCQlcIGxldCB0aGUgdGFzayBj
b250aW51ZQogICB0aGVuCjsKCjogZGlzY29ubmVjdCAgICggdGhpcyAtLSAgKQkJCVwgb3Zl
cnJpZGVzIGRpc2Nvbm5lY3QKXCAqRyBEaXNjb25uZWN0IGZyb20gc2VydmVyLiBEbyBub3Ro
aW5nIGlmIGFscmVhZHkgZGlzY29ubmVjdGVkLgogICBjb25uZWN0ZWQ/IGlmCiAgICAgIG0t
dGNiIEAgaGFsdCAKICAgICAgbS1zb2NrIGNsb3NlLWdpbyB0aHJvdwogICAgICB4Y29uc29s
ZSBtLXNpZCAhCiAgIHRoZW4JCjsKICAKOiBnZXRQcm9wZXJ0aWVzICAgKCB0aGlzIC0tICkJ
CQlcIG92ZXJyaWRlcyBnZXQKXCAqRyBTZW5kIGFuIElOREkgPGdldFByb3BlcnRpZXM+IG1l
c3NhZ2UuClwgSSBTSE9VTEQgQ0FUQ0ggRVhDRVBUSU9OUyBIRVJFIEJVVCBET05UIEtOT1cg
WUVUIEhPVyBUTyBETyBJVCAhISEhCiAgICBtLXNpZCBACiAgIFtpbyBTZXRJTyAoZ2V0UHJv
cGVydGllcykgaW9dCjsKCg==